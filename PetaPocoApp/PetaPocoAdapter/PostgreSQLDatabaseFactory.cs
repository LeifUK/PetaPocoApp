namespace PetaPocoApp.PetaPocoAdapter
{
    internal class PostgreSQLDatabaseFactory
    {
        private static string MakeConnectionString(string host, int port, bool useWindowsAuthentication, string userName, string password, string dbName)
        {
            Npgsql.NpgsqlConnectionStringBuilder npgsqlConnectionStringBuilder = new Npgsql.NpgsqlConnectionStringBuilder();
            npgsqlConnectionStringBuilder.Host = host;
            npgsqlConnectionStringBuilder.Port = port;
            npgsqlConnectionStringBuilder.IntegratedSecurity = useWindowsAuthentication;
            npgsqlConnectionStringBuilder.Username = userName;
            npgsqlConnectionStringBuilder.Password = password;
            npgsqlConnectionStringBuilder.Database = dbName;
            return npgsqlConnectionStringBuilder.ToString();
        }

        public static void CreateDatabase(out PetaPoco.IDatabase iDatabase, string host, int port, bool useWindowsAuthentication, string userName, string password, string dbName)
        {
            // Connect to the master DB to create the requested database

            OpenDatabase(out iDatabase, host, port, useWindowsAuthentication, userName, password, "postgres");

            iDatabase.Execute(@"CREATE DATABASE " + dbName + @" WITH OWNER = postgres ENCODING = 'UTF8' CONNECTION LIMIT = -1;");
            iDatabase.CloseSharedConnection();

            // Connect to the new database

            OpenDatabase(out iDatabase, host, port, useWindowsAuthentication, userName, password, dbName);

            iDatabase.Execute("CREATE TABLE \"tblConfiguration\" (name VARCHAR(100) PRIMARY KEY, value VARCHAR(767) NOT NULL);");
            iDatabase.Execute("CREATE TABLE \"tblFungi\" ( " +
                "id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                "species VARCHAR(1000) NOT NULL, " +
                "synonyms VARCHAR(1000) NULL, " +
                "common_name VARCHAR(1000) NULL, " +
                "fruiting_body VARCHAR(1000) NULL, " +
                "cap VARCHAR(1000) NULL, " +
                "hymenium VARCHAR(1000) NULL, " +
                "gills VARCHAR(1000) NULL, " +
                "pores VARCHAR(1000) NULL, " +
                "spines VARCHAR(1000) NULL, " +
                "stem VARCHAR(1000) NULL, " +
                "flesh VARCHAR(1000) NULL, " +
                "smell VARCHAR(1000) NULL, " +
                "taste VARCHAR(1000) NULL, " +
                "season VARCHAR(1000) NULL, " +
                "distribution VARCHAR(1000) NULL, " +
                "habitat VARCHAR(1000) NULL, " +
                "spore_print VARCHAR(1000) NULL, " +
                "microscopic_features VARCHAR(1000) NULL, " +
                "edibility VARCHAR(1000) NULL, " +
                "notes VARCHAR(1000) NULL);");
            iDatabase.Execute("CREATE TABLE \"tblImagesDatabase\" (id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, path VARCHAR(255) UNIQUE);");
            iDatabase.Execute("CREATE TABLE \"tblImages\" ( " +
                    "id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "fungus_id INTEGER NOT NULL, " +
                    "image_database_id INTEGER NULL, " +
                    "filename VARCHAR(1000) NOT NULL, " +
                    "description VARCHAR(1000) NULL, " +
                    "copyright VARCHAR(1000) NULL, " +
                    "display_order INTEGER NULL, " +
                    "FOREIGN KEY(fungus_id) REFERENCES \"tblFungi\"(id)," +
                    "FOREIGN KEY(image_database_id) REFERENCES \"tblImagesDatabase\"(id));");
        }

        public static void OpenDatabase(out PetaPoco.IDatabase iDatabase, string host, int port, bool useWindowsAuthentication, string userName, string password, string dbName)
        {
            string connectionString = MakeConnectionString(host, port, useWindowsAuthentication, userName, password, dbName);
            iDatabase = new PetaPoco.Database(connectionString, "Npgsql");
            iDatabase.OpenSharedConnection();
        }
    }
}

